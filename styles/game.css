/*FONT*/

@import url("http://fonts.googleapis.com/css?family=Open+Sans");
@import url("http://fonts.googleapis.com/css?family=Julius+Sans+One");
@import url("http://fonts.googleapis.com/css?family=Sansita+One");

/*TAGS*/ 

html, body {
  user-select: none;  
  margin: 0;
  width: 100%; height: 100%;
}

body, p, button, noscript {
  font-family: "Open Sans", "open sans", "Arial", sans-serif;
}

h1, h2 {
  font-family: "Julius Sans One";  
  padding: 1px 2px;
  margin: 0;
  font-weight: normal;
}

noscript {  
  margin: 16px auto;
  width: 80%;
  display: block;
  text-align: center;
}

noscript p {
  display: block;
  margin: 1em;
}

body {
  display: table;
  background-attachment: fixed;
  background-color: #22272c;
  background: radial-gradient(ellipse farthest-corner at center top, #6e7a66 0%, #343b43 30%, #22272c 60%, #22272c 100%), #22272c;
  color: white;
  background-size: 100% 20%;
  background-repeat: no-repeat;
  box-shadow: 0 -50px 100px rgba(0,0,0,0.7) inset;
}

p {
  cursor: default;
  word-spacing: -1px;
  font-size: 16px;
  line-height: 16px;
  margin: 2px;
  border: 2px solid transparent;
  padding: 1px 2px;
  display: inline-block;
}

a {
  text-decoration: underline;
  color: inherit;
}

a:visited {
  text-decoration: none;
  color: inherit;
}
h1 {
  font-size: 22px;
  cursor: default;
}
h2 {
  font-size: 19px;
  cursor: default;

}
img {
  border: 0;
}
small {
  cursor: default;
  font-size: 60%;
}

/*CLASS*/

.container {
  display: table-cell;
  vertical-align: middle;
}

.unsupported, noscript , #states {
  margin: 0 auto;
  width: 970px;
  height: 600px;  
  background-color: #c2beb2;  
  background-size: cover;
  position: relative;  
  overflow: hidden;
  border-radius: 4px;
  box-shadow: 0 0 6px black;  
  background-image: url("../img/bkg/polygon-light.jpg");  
}

.unsupported {
  text-align: center;
  display: none;
}

.unsupported p {
  display: block;
  margin: 1em;
}

.banner {
  border-radius: 5px;
  width: 80%;
}

.hidden {
  display: none;
}

.box {
  position: absolute;
  top: 50%; left: 50%;
  transform: translate(-50%, -50%);  
  padding: 50px 100px;
  text-align: center;
  border-radius: 5px;
  background: rgba(0,0,0,0.4);
}
.box div p {
  display: block;
}

.fork {
  position: absolute;
  top: 0; right: 0;
  opacity: 0.55;
  z-index: 10;
}

/*STATES*/

#states {
  transition: background 1s;
}
#states.low {
  transform: scale(0.75);
}
#states.high {
  transform: scale(1.25);
}
#states > div {
  width: 100%; height: 100%;
  position: relative;
}

#states.table, 
#states.choose {
  background-image: url("../img/bkg/polygon-dark.jpg");
}

/*TOPBAR*/

.topbar {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.choose .topbar,
.table .topbar {
  background: rgba(0,0,0,0.4);
}

.loader {
  width: 16px;
  height: 16px;
  display: inline-block;
  vertical-align: top; 
  margin: 4px;
  padding: 0;
  border: 3px solid transparent;
  border-bottom: 3px solid white;
  border-radius: 50%; 
  visibility: hidden;
}
.loader.loading {
  visibility: visible;
  animation: rotate 1s linear infinite;
}
@keyframes rotate {
  0% { transform: rotate(0);}
  100% { transform: rotate(360deg);}
}
.triescounter {
  position: absolute;
  left: 9px;
  top: 9px;
  width: 12px;
  text-align: center;
}

/*
.message {
  transition: background 0.5s;
}
.turn .message {
  background: rgba(0,150,0,0.6);
}
.unturn .message {
  background: rgba(150,0,0,0.6);
}
*/

.logout {
  cursor: pointer;
}
.logout:hover {
  color: #ddd;
}

.time {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.turns {
  float: right;
}

/*INTRO*/

.introheader {
  padding: 10px;
  font-size: 38px;
}
.introheader a {
  text-decoration: none;
  font: monospace;
  font-size: 33%;
}

#introvideo {
  pointer-events: none;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
  filter: saturate(1.75);
  -webkit-filter: saturate(1.75);
}

.skipvideo {
  width: 100%; height: 100%;
  position: absolute;
  top: 0; left: 0;
}

/*LOGIN*/

.login .box {
  width: 300px;
}
input {  
  border-radius: 3px;
  font-family: monospace;
  letter-spacing: -1px;
  word-spacing: -1px;
  font-size: 16px;
  color: #4d4843;
  outline: 0;
  border: 0;
  padding: 5px;
}
input:focus {
  animation: shade 0.5s;
}
@keyframes shade {
  50% {opacity: 0.5;}
}
button {
  font-family: "Julius Sans One";
  font-size: 16px;
  cursor: pointer;
  padding: 8px 16px;
  border: 0;
  border-radius: 3px;
  margin: 6px;
  outline: 0;
  background: #bfbfb0;
  color: white;
  text-shadow: 0 1px 0 #9b9c89;
  box-shadow: 0 4px 0 #9b9c89;
  opacity: 0.9;
  position: relative;
  top: -3px;
  transition: all 0.2s;
}
button:hover {
  background: lightgray;
}
button:active {
  top: -1px;
  box-shadow: 0 1px 0 #9b9c89;
}
button[disabled] {  
  background: darkgray;
  color: gray;
  text-shadow: none;
  box-shadow: 0 4px 0 gray;
}
button[disabled]:hover {  
  background: darkgray;
}


/*MENU*/

.menu .box {
  left: 250px;
}
.menu  button {
  display: block;
  margin: 12px auto;
  width: 200px;
}
.chat {
  background: rgb(227,239,250);
  position: absolute;
  right: 10px; top: 10px;
  width: 450px; height: 570px;
  opacity: 0.8;
  border: 1px solid rgb(195,210,224);
  border-radius: 4px;
  padding: 4px;
  color: #4d4843;
}

/*OPTIONS*/

.options .box div {
  float: left;
  padding: 5px 15px;
}

label {
  display: block; 
  padding: 1px 2px;
  margin: 2px;
  text-align: left;
}
label input {
  float: left;
  margin: 5px;
}

/*CHOOSE*/

.deck {
  transition: all 0.4s;
}

.deck .card {
  float: left;
}

.choose .counter {
  width: 100%;
}

.pickbox {
  width: 760px;  
  height: 300px;
  position: absolute;
  top: 35px;
  left: 50%;
  transform: translateX(-50%);
  overflow: hidden;
  padding: 10px 0;
  text-align: center;
  border-radius: 4px;
  background: rgba(0,0,0,0.4);
}

.pickbox .deck {
  position: relative;  
  left: -50%;
  height: 300px;
}

.pickbox .card {  
  margin: 0 -50px;
  transform: translate(-50%, -50%) scale(0.4);     
}

.pickbox .card.active {
  margin: 0 10px;
  transform: translate(-50%, -50%) scale(1);
}

.pickedbox {
  width: 540px;  
  height: 190px;
  position: absolute;
  top: 360px;
  left: 105px;
  overflow: hidden;
  padding: 2px;
  text-align: center;
  border-radius: 4px;
  background: rgba(0,0,0,0.4);
}

.slot {
  border-radius: 4px;
  float: left;
  width: 100px;
  height: 150px;
  margin: 4px;  
  box-shadow: inset 0 0 40px rgba(255,255,255,0.1);
}

.slot.available {
  animation: innerlight 0.5s infinite;
}
@keyframes innerlight {
  0%, 100% {box-shadow: inset 0 0 40px rgba(255,255,255,0.2);}
  50% {box-shadow: inset 0 0 40px rgba(255,255,255,0.1);}
}
.slot:hover {
  background: rgba(255,255,255,0.1);
}

.pickedbox .card {
  animation: slidedown 0.5s;
  transform: translate(-50%, -50%) scale(0.4);
}
@keyframes slidedown {
  0% {top: 0%;}
  100% {top: 50%;}
}
.pickedbox .card:hover { 
  top: 45%;
  transform: translate(-50%, -50%) scale(0.45);
}

.prepickbox {
  width: 206px;
  height: 190px;
  position: absolute;
  top: 360px;
  left: 655px;
  padding: 2px;
  text-align: center;
  border-radius: 4px;
  background: rgba(0,0,0,0.4);
}

.choose .card .kd,
.choode .card .damaged,
.choode .card .heal,
.choose .card .buffs {
  display: none;
}

/*CARD*/

.card {
  position: relative;
  top: 50%; left: 50%;
  display: inline-block;
  background: blue;
  cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer;
  text-align: left;  
  transition: all 0.4s;
  padding: 0;
  width: 200px; height: 300px;
  border-radius: 8px;
  box-shadow: 0 0 20px rgba(255,255,255,0.5);  
  z-index: 1;
  color: #4d4843;
}
.card:hover {
  z-index: 2;
  box-shadow: 0 0 15px 5px rgba(255,255,255,0.5);
}

.card legend {     
  color: white;
  font-size: 14px;
  text-transform: uppercase;
  margin: 5px 0 0 10px;
}

.card fieldset {
  border-radius: 4px;
  padding: 3px;
  margin: 0 5px;
  height: 265px;
  background: #f7fae3;
  border: 0;
}

.card .img {
  display: block;
  border-radius: 3px;
  background-size: cover;
  background-position: 50% 50%;
}
.card .overlay {
  box-shadow: 0 0 20px rgba(0,0,0,0.5) inset;
  border-radius: 3px;
  position: absolute;
  top: 0;
}

.card .portrait {
  position: relative;
}

.card .portrait .img,
.card .portrait .overlay {
  height: 112px;
}
.card .portrait .overlay {
  width: 100%;
}

.card h1 {   
  cursor: inherit;
  font-family: "Open Sans", "open sans", "Arial", sans-serif;
  margin: 4px 0 0;
  font-size: 12px;
  font-weight: bold;
  float: left;
}
.card .current {
  margin: 1px;
  position: absolute;
  right: 5px;
}
.card .current p {
  margin: 1px;
  font-size: 12px;
  font-weight: bold;
  display: inline-block;
}
.card .current span {
  text-align: center;
  display: inline-block;
  border-radius: 50%;
  width: 19px;
  height: 18px;
  padding-top: 2px;
  padding-left: 1px;
}
.card .current .hp span {
  background: #ceeb71;
}
.card .current .damage span {
  background: #ed8c8c; 
  color: white;
}

.card .desc {
  clear: left;
}

.card p { 
  cursor: inherit;
  text-align: justify;
  margin: 0;
  border: 0;
  font-size: 13px;
  display: block;
}

.card.player {
  cursor: url("../img/cursor/cursor-green.png"), url("../img/cursor/cursor-green.cur"), pointer;
  background: #74c47b;
}
.card.enemy {
  cursor: url("../img/cursor/cursor-red.png"), url("../img/cursor/cursor-red.cur"), pointer;
  background: #c23636;
}
.card.skills {
  cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer;
  background: #54a0e3;
}

.card.player.heroes.selected,
.card.player.towers.selected {
  box-shadow: 0 0 0 10px springgreen;
  z-index: 5;
}
.card.enemy.heroes.selected,
.card.enemy.towers.selected {
  box-shadow: 0 0 0 10px orangered;
  z-index: 5;
}
.card.skills.selected {
  box-shadow: 0 0 0 6px skyblue;
}
.card.tree.selected {
  box-shadow: 0 0 0 10px palegreen;
}
.card.heroes.dead.selected {
  box-shadow: 0 0 0 6px gray;
}
.card.enemy.attacktarget {
  box-shadow: 0 0 0 10px red;
}
.card.source {
  box-shadow: 0 0 0 10px skyblue;
}
.card.targetspot,
.card.casttarget{
  box-shadow: 0 0 0 10px dodgerblue;
}
.card.player.done {
  background: silver;
}
.map .card.player.done.selected {  
  box-shadow: 0 0 0 10px gray;
}
.map .card.enemy.heroes.done, 
.map .card.enemy.heroes.done.selected {
  box-shadow: 0 0 0 10px gold;
}

.card.enemy.attacktarget:after, 
.card.enemy.attacktarget:before {
  z-index: 4;
  position: absolute;
  content:""; 
  display: block;
}
.card.enemy.attacktarget:before {
  width: 50px; height: 50px;
  border: 20px solid transparent;
  border-right: 12px solid orangered;
  border-bottom: 12px solid orangered;
  background: transparent;
  left: 60px; top: 50px; 
  transform: rotate(45deg) scale(1);  
}
.card.enemy.attacktarget:hover:before {  
  animation: scaleattackbefore 1.5s infinite;
}
@keyframes scaleattackbefore {
  0%, 20%, 80%, 100% { transform: rotate(45deg) scale(1); }
  50% { transform: translateY(-25px) rotate(45deg) scale(1.5); }
}
.card.enemy.attacktarget:after {
  width: 150px; height: 50px;
  border: 0px solid transparent;
  border-top: 12px solid orangered;
  background: transparent;
  left: 30px; bottom: 30px; 
  transform: rotate(0deg) scale(1);
  transition: all 0.5s;
  border-radius: 6px;
}
.card.enemy.attacktarget:hover:after {  
  animation: scaleattackafter 1.5s infinite;
}
@keyframes scaleattackafter {
  0%, 100% { 
    width: 150px;
    bottom: 30px; left: 30px;  
    transform: rotate(0deg) scale(1);
    border-radius: 3px;
  }
  20%, 80% { 
    width: 50px; 
    bottom: 70px; left: 60px; 
    border: 20px solid transparent;
    border-top: 12px solid orangered;
    border-left: 12px solid orangered;
    transform: rotate(45deg) scale(1);
    border-radius: 0;
  }
  50% {
    transform: translateY(25px) rotate(45deg) scale(1.5);
  }
}

.card.targetspot:after, 
.card.targetspot:before {
  z-index: 4;
  position: absolute;
  content:""; 
  display: block;
}
.card.targetspot:before {
  width: 50px; height: 50px;
  border: 20px solid transparent;
  border-right: 12px solid dodgerblue;
  border-bottom: 12px solid dodgerblue;
  background: transparent;
  left: 60px; top: 50px; 
  transform: rotate(45deg) scale(1);  
}
.card.targetspot:hover:before {  
  animation: scalespotbefore 1.5s infinite;
}
@keyframes scalespotbefore {
  0%, 100% { 
    left: 60px; top: 50px; 
    width: 50px; height: 50px;
    transform: rotate(45deg) scale(1); 
  }
  20%, 80% {
    width: 100px; height: 100px;
    left: 40px; top: 90px;
    transform: rotate(45deg);
    border: 12px solid transparent;
    border-left: 12px solid dodgerblue;
    border-top: 12px solid dodgerblue;
    border-radius: 50%;   
    transform: rotate(45deg) scale(1); 
  }
  50% { transform: rotate(45deg) scale(1.2); }
}
.card.targetspot:after {
  width: 150px; height: 50px;
  border: 0px solid transparent;
  border-top: 12px solid dodgerblue;
  background: transparent;
  left: 30px; bottom: 30px; 
  transform: rotate(0deg) scale(1);
  transition: all 0.5s;
  border-radius: 6px;
}
.card.targetspot:hover:after {  
  animation: scalespotafter 1.5s infinite;
}
@keyframes scalespotafter {
  0%, 100% { 
    width: 150px; height: 50px;
    left: 30px; bottom: 30px; 
    transform: rotate(0deg) scale(1);
    border: 12px solid transparent;
    border-bottom: 12px solid dodgerblue;
    border-radius: 6px;
  }
  20%, 80% { 
    width: 100px; height: 100px;
    left: 40px; bottom: 86px;
    transform: rotate(45deg) scale(1);
    border: 12px solid transparent;
    border-right: 12px solid dodgerblue;
    border-bottom: 12px solid dodgerblue;
    border-radius: 50%;
  }
  50% {
    transform: rotate(45deg) scale(1.2);
  }
}

.card.casttarget:after, 
.card.casttarget:before {
  z-index: 4;
  position: absolute;
  content:""; 
  display: block;
}
.card.casttarget:before {
  width: 50px; height: 50px;
  border: 20px solid transparent;
  border-right: 12px solid dodgerblue;
  border-bottom: 12px solid dodgerblue;
  background: transparent;
  left: 60px; top: 50px; 
  transform: rotate(45deg) scale(1);  
}
.card.casttarget:hover:before {  
  animation: scalecastbefore 1.5s infinite;
}
@keyframes scalecastbefore {
  0%, 20%, 80%, 100% { transform: rotate(45deg) scale(1); }
  50% { transform: translateY(-25px) rotate(45deg) scale(1.5); }
}
.card.casttarget:after {
  width: 150px; height: 50px;
  border: 0px solid transparent;
  border-top: 12px solid dodgerblue;
  background: transparent;
  left: 30px; bottom: 30px; 
  transform: rotate(0deg) scale(1);
  transition: all 0.5s;
  border-radius: 6px;
}
.card.casttarget:hover:after {  
  animation: scalecastafter 1.5s infinite;
}
@keyframes scalecastafter {
  0%, 100% { 
    width: 150px;
    bottom: 30px; left: 30px;  
    transform: rotate(0deg) scale(1);
    border-radius: 3px;
  }
  20%, 80% { 
    width: 50px; 
    bottom: 70px; left: 60px; 
    border: 20px solid transparent;
    border-top: 12px solid dodgerblue;
    border-left: 12px solid dodgerblue;
    transform: rotate(45deg) scale(1);
    border-radius: 0;
  }
  50% {
    transform: translateY(25px) rotate(45deg) scale(1.5);
  }
}
.card .damaged {
  font-family: "Sansita One";
  z-index: 6;
  color: gold;
  position: absolute;
  opacity: 0;
  top: 0;  
  right: 0;
  font-size: 120px;
  animation: slideup 2s linear;
  text-shadow: 3px 0 1px white,
    -3px 0 1px white,
    0 3px 1px white,
    0 -3px 2px white;
}
.card .damaged.critical {
  color: orangered;
}
.card .heal {
  font-family: "Sansita One";
  color: springgreen;
  position: absolute;
  opacity: 0;
  top: 0;  
  left: 0;
  font-size: 180px;
  animation: slideup 2s linear;
}
@keyframes slideup {
  0% {top: 0;opacity: 1;}
  80% {opacity: 1;}
  100% {top: -100px;opacity: 0;}
}
.card.dead {
  background: silver;
  -webkit-filter: grayscale(0.9);
  filter: grayscale(0.9);
}
.card.dead .damaged {
  display: none;
}
.card .buffs {
  position: absolute;
  bottom: 8px;
  left: 8px;
}
.card .buffs .buff {
  float: left;
  margin-right: 5px;
  position: relative;
}
.card .buffs .buff .img ,
.card .buffs .buff .overlay {
  box-shadow: 0 0 10px rgba(0,0,0,0.5) inset;
  width: 36px; height: 36px;
}

/*TABLE*/

.table .deck {
  position: absolute;
  height: 120px; 
  bottom: -16px;
  z-index: 6;
}

.table .deck .card {  
  transform: translate(-50%, -50%) scale(0.4);
  margin-right: -180px;
  left: 40px;
}
.table .deck .card:hover {
  transform: translate(-50%, -50%) scale(0.45);
}
.table .deck .card.selected {
  transform: translate(-50%, -50%) scale(0.5);
}

.table .player.heroes.deck {
  width: 160px;
  left: 10px;
}
.table .player.skills.ult.deck {
  left: 160px;
  width: 350px;
}
.table .player.skills.permanent.deck {
  left: 175px;
  width: 160px;
}
.table .player.skills.hand {
  right: 10px;
  width: 620px;
}
.table .player.skills.hand .card {
  margin-right: -140px;
}
.table .selectedarea {
  width: 200px;
  height: 300px;
  position: absolute;
  top: 50px;
  right: 15px;
}
.table .selectedarea .card {
  z-index: 7;
  transform: translate(-50%, -50%) scale(1.1);   
}
.table .selectedarea .card:hover {
  transform: translate(-50%, -50%) scale(1.9) translate(-50px, 55px); 
}
.table .selectedarea .card .damaged {
  display: none;
}

.table .deck.skills.enemy { 
  z-index: 6;
  top: 40px;
  left: 0px;
  opacity: 1;
  transition: all 4s;
}
.table .deck.skills.enemy.slide {  
  z-index: 6;
  left: 200px;
  opacity: 0;
} 
.table .deck.skills.enemy .card {  
  z-index: 6;
  margin-right: -100px;
}

/*MAP*/

.camera {
  position: absolute;
  top: 35px; left: 5px;    
}

.map {
  cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer;
  border-collapse: separate;
  border-spacing: 1px;
  z-index: 1;
  background-size: 100%;
  background-image: url("../img/bkg/map_vectorized.png");
  box-shadow: inset 0 0 8px 6px black;
}

.map .card {
  z-index: 3;
  top: 50%; left: 50%;
  transform: translate(-50%, -50%) scale(0.29);  
  position: absolute;
}
.map .card:hover {
  transform: translate(-50%, -50%) scale(0.3); 
}
.map .card.channeling {
  transform: translate(-50%, -50%) scale(0.29) rotate(5deg); 
}

.map td {
  box-sizing: border-box;
  background: rgba(255,255,255,0.05);
  width: 60px; height: 90px;
  position: relative;
  border: 1px solid transparent;
  border-radius: 3px;
}
.map td:hover {
  background: rgba(255,255,255,0.08);
}

.map td.playerarea {
  background: rgba(100,255,100,0.2);
}
.map td.playerarea:hover {
  background: rgba(100,255,100,0.3);
}

.map td.enemyarea {
  background: rgba(255,100,100,0.2);
}
.map td.enemyarea:hover {
  background: rgba(255,100,100,0.3);
}

.map td.camp {
  background: rgba(255,255,100,0.15);
}
.map td.camp:hover {
  background: rgba(255,255,100,0.25);
}

.turn .map td.movearea {  
  cursor: url("../img/cursor/cursor-green.png"), url("../img/cursor/cursor-green.cur"), pointer;
}
.turn .map td.movearea:after,
.turn .map td.movearea:before,
.turn .map td.targetarea:after,
.turn .map td.targetarea:before {
  content: ""; display: block;
  position: absolute;
}
  
.turn .map td.movearea:after {
  width: 36px; height: 3px;
  background: springgreen;
  left: 12px; bottom: 35px;
  border-radius: 2px;
}
.turn .map td.movearea:before {
  width: 10px; height: 10px;
  border: 2px solid transparent;
  border-right: 3px solid springgreen;
  border-bottom: 3px solid springgreen;
  background: transparent;
  left: 22px; top: 25px; 
  transform: rotate(45deg);
}
.turn .map td.movearea:hover:before {
  animation: moveslide 1s infinite
}
@keyframes moveslide {
  0%, 100% { top: 25px; }
  33% { top: 15px; }
  66% { top: 30px; }
}

.turn .map td.targetarea:before {
  width: 10px; height: 10px;
  border: 2px solid transparent;
  border-right: 3px solid dodgerblue;
  border-bottom: 3px solid dodgerblue;
  background: transparent;
  left: 22px; top: 25px; 
  transform: rotate(45deg) scale(1); 
  transition: all 0.5s;
}
.turn .map td.targetarea:hover:before {  
  animation: scaleareabefore 1.5s infinite;
}
@keyframes scaleareabefore {
  0%, 100% { 
    left: 22px; top: 25px; 
    width: 10px; height: 10px;
    transform: rotate(45deg) scale(1); 
  }
  20%, 80% {
    width: 30px; height: 30px;
    left: 12px; 
    border: 3px solid transparent;
    border-left: 3px solid dodgerblue;
    border-top: 3px solid dodgerblue;
    border-radius: 50%;   
    transform: rotate(45deg) scale(1); 
  }
  50% { transform: rotate(45deg) scale(1.2); }
}
.turn .map td.targetarea:after {
  width: 30px; height: 10px;
  border: 3px solid transparent;
  border-bottom: 3px solid dodgerblue;
  background: transparent;
  left: 12px; bottom: 28px; 
  transform: rotate(0deg);
  transition: all 0.5s;
  border-radius: 3px;
}
.turn .map td.targetarea:hover:after {
  animation: scaleareaafter 1.5s infinite;
}
@keyframes scaleareaafter {
  0%, 100% { 
    width: 30px; height: 10px;
    left: 12px; bottom: 28px; 
    transform: rotate(0deg) scale(1);
    border: 2px solid transparent;
    border-bottom: 3px solid dodgerblue;
    border-radius: 3px;
  }
  20%, 80% { 
    width: 30px; height: 30px;
    left: 12px; 
    transform: rotate(45deg) scale(1);
    border: 3px solid transparent;
    border-right: 3px solid dodgerblue;
    border-bottom: 3px solid dodgerblue;
    border-radius: 50%;
  }
  50% {
    transform: rotate(45deg) scale(1.2);
  }
}

/*STROKES*/

.map td.stroke.playerattack.top { 
  border-top: 1px solid gold;
}
.map td.stroke.playerattack.bottom { 
  border-bottom: 1px solid gold;
}
.map td.stroke.playerattack.left { 
  border-left: 1px solid gold;
}
.map td.stroke.playerattack.right { 
  border-right: 1px solid gold;
}
.map td.stroke.enemyattack.top { 
  border-top: 1px solid orangered;
}
.map td.stroke.enemyattack.bottom { 
  border-bottom: 1px solid orangered;
}
.map td.stroke.enemyattack.left { 
  border-left: 1px solid orangered;
}
.map td.stroke.enemyattack.right { 
  border-right: 1px solid orangered;
}
.map td.stroke.skillcast.top { 
  border-top: 1px solid springgreen;
}
.map td.stroke.skillcast.bottom { 
  border-bottom: 1px solid springgreen;
}
.map td.stroke.skillcast.left { 
  border-left: 1px solid springgreen;
}
.map td.stroke.skillcast.right { 
  border-right: 1px solid springgreen;
}
.map td.stroke.skillarea.top { 
  border-top: 1px solid dodgerblue;
}
.map td.stroke.skillarea.bottom { 
  border-bottom: 1px solid dodgerblue;
}
.map td.stroke.skillarea.left { 
  border-left: 1px solid dodgerblue;
}
.map td.stroke.skillarea.right { 
  border-right: 1px solid dodgerblue;
}

.map td.cript {
  background: rgba(0,0,0,0.2);
}
.map td.cript:after {
  content: "†";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 32px;
  color: rgba(255,255,255,0.4);
}

/*RESULTS*/

.table .resultsbox {
  z-index: 7;
  width: 600px;
}
.table .result {
  text-transform: uppercase;
  font-size: 25px;
}
.table .results {
  display: inline-block;
  width: 300px;
}
.table .results p {
  box-shadow: inset 0 0 0 50px rgba(0,0,0,0.7);
  border: 0;
  padding: 5px;
  position: relative;
  overflow: hidden;
  white-space: nowrap; 
}
.table .results span {
  line-height: 30px;  
  margin-left: 70px;
}
.table .results .portrait {
  position: absolute; top: 5px; left: 5px;
  width: 60px; height: 30px;
}
.table .results .img {
  width: 60px; height: 30px;
  background-size: cover;
  background-position: 50%;
}

/*HEROES*/

.pud {
  background: #b43;
}
.pud .portrait .img {
  background-image: url("../img/heroes/pudge_full.png");
}
.pud-hook .img {
  background-image: url("../img/skills/pudge_meat_hook.png");
}
.pud-rot .img {
  background-image: url("../img/skills/pudge_rot.png");
}
.pud-passive .img {
  background-image: url("../img/skills/pudge_flesh_heap.png");
}
.pud-ult .img {
  background-image: url("../img/skills/pudge_dismember.png");
}


.nyx {
  background: #145;
}
.nyx .portrait .img {
  background-image: url("../img/heroes/nyx_assassin_full.png");
}
.nyx-stun .img {
  background-image: url("../img/skills/nyx_assassin_impale.png");
}
.nyx-burn .img {
  background-image: url("../img/skills/nyx_assassin_mana_burn.png");
}
.nyx-spike .img {
  background-image: url("../img/skills/nyx_assassin_spiked_carapace.png");
}
.nyx-ult .img {
  background-image: url("../img/skills/nyx_assassin_vendetta.png");
}


.am {
  background: #674f80;
}
.am .portrait .img {
  background-image: url("../img/heroes/antimage_full.png");
}
.am-burn .img {
  background-image: url("../img/skills/antimage_mana_break.png");
}
.am-blink .img {
  background-image: url("../img/skills/antimage_blink.png");
}
.am-passive .img {
  background-image: url("../img/skills/antimage_spell_shield.png");
}
.am-ult .img {
  background-image: url("../img/skills/antimage_mana_void.png");
}


.ld {
  background: #62a64e;
}
.ld .portrait .img {
  background-image: url("../img/heroes/lone_druid_full.png");
}
.ld-summon .img {
  background-image: url("../img/skills/lone_druid_spirit_bear.png");
}
.ld-rabid .img {
  background-image: url("../img/skills/lone_druid_rabid.png");
}
.ld-passive .img {
  background-image: url("../img/skills/lone_druid_synergy.png");
}
.ld-cry .img {
  background-image: url("../img/skills/lone_druid_true_form_battle_cry.png");
}
.ld-ult .img {
  background-image: url("../img/skills/lone_druid_true_form.png");
}
.ld-transform .img {
  background-image: url("../img/skills/lone_druid_true_form_druid.png");
}

.wk {
  background: #6db090;
}
.wk .portrait .img {
  background-image: url("../img/heroes/skeleton_king_full.png");
}
.wk-stun .img,
.wk-dot .img {
  background-image: url("../img/skills.vec/skeleton_king_hellfire_blast.png");
}
.wk-lifesteal .img {
  background-image: url("../img/skills.vec/skeleton_king_vampiric_aura.png");
}
.wk-crit .img {
  background-image: url("../img/skills.vec/skeleton_king_mortal_strike.png");
}
.wk-ult .img {
  background-image: url("../img/skills.vec/skeleton_king_reincarnation.png");
}


.kotl {
  background: #E5BC53;
}
.kotl .portrait .img {
  background-image: url("../img/heroes/keeper_of_the_light_full.png");
}
.kotl-illuminate .img {
  background-image: url("../img/skills/keeper_of_the_light_illuminate.png");
}
.kotl-illuminate-end .img {
  background-image: url("../img/skills/keeper_of_the_light_illuminate_end.png");
}
.kotl-leak .img {
  background-image: url("../img/skills/keeper_of_the_light_mana_leak.png");
}
.kotl-mana .img {
  background-image: url("../img/skills/keeper_of_the_light_chakra_magic.png");
}
.kotl-ult .img {
  background-image: url("../img/skills/keeper_of_the_light_spirit_form.png");
}
.kotl-illuminate-ult .img {
  background-image: url("../img/skills/keeper_of_the_light_spirit_form_illuminate.png");
}
.kotl-blind .img {
  background-image: url("../img/skills/keeper_of_the_light_blinding_light.png");
}
.kotl-recall .img {
  background-image: url("../img/skills/keeper_of_the_light_recall.png");
}


.cm {
  background: #54a0e3;
}
.cm .portrait .img {
  background-image: url("../img/heroes/crystal_maiden_full.png");
}
.cm-slow .img {
  background-image: url("../img/skills.vec/crystal_maiden_crystal_nova.png");
}
.cm-aura .img {
  background-image: url("../img/skills.vec/crystal_maiden_brilliance_aura.png");
}
.cm-freeze .img {
  background-image: url("../img/skills.vec/crystal_maiden_frostbite.png");
}
.cm-ult .img {
  background-image: url("../img/skills.vec/crystal_maiden_freezing_field.png");
}


/*TOWERS*/

.card.player.towers .img {
  background-image: url("../img/towers/tower-player.vec.png");
}
.card.enemy.towers .img {
  background-image: url("../img/towers/tower-enemy.vec.png");
}

/*UNITS*/

.tree {
  background: forestgreen;
}

.tree .img {
  background-image: url("../img/units/tree.png");
}

/*BUFFS*/

.stun .img {
   background-image: url("../img/skills.vec/stun.png")
}
.silence .img {
   background-image: url("../img/skills/silence.jpg")
}
.magicimmune .img {
   background-image: url("../img/skills/magicimmune.gif")
}
.ethereal .img {
   background-image: url("../img/skills/ethereal.png")
}
