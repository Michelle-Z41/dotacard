game.card={bindJquery:function(){$.fn.place=game.card.place,$.fn.select=game.card.select,$.fn.unselect=game.card.unselect,$.fn.highlightSource=game.card.highlightSource,$.fn.highlightTargets=game.card.highlightTargets,$.fn.strokeSkill=game.card.strokeSkill,$.fn.highlightMove=game.card.highlightMove,$.fn.move=game.card.move,$.fn.animateMove=game.card.animateMove,$.fn.cast=game.card.cast,$.fn.stopChanneling=game.card.stopChanneling,$.fn.passive=game.card.passive,$.fn.toggle=game.card.toggle,$.fn.addBuff=game.card.addBuff,$.fn.hasBuff=game.card.hasBuff,$.fn.removeBuff=game.card.removeBuff,$.fn.addStun=game.card.addStun,$.fn.reduceStun=game.card.reduceStun,$.fn.discard=game.card.discard,$.fn.strokeAttack=game.card.strokeAttack,$.fn.highlightAttack=game.card.highlightAttack,$.fn.attack=game.card.attack,$.fn.damage=game.card.damage,$.fn.heal=game.card.heal,$.fn.changedamage=game.card.changedamage,$.fn.changehp=game.card.changehp,$.fn.die=game.card.die,$.fn.reborn=game.card.reborn},build:function(a){var b,c,d,e,f,g;return b=$("<div>").addClass("card "+a.className),$("<legend>").appendTo(b).text(a.name),c=$("<fieldset>").appendTo(b),d=$("<div>").addClass("portrait").appendTo(c),$("<div>").appendTo(d).addClass("img"),$("<div>").appendTo(d).addClass("overlay"),a.attribute?$("<h1>").appendTo(c).text(a.attribute):game.data.heroes[a.hero]?$("<h1>").appendTo(c).text(game.data.heroes[a.hero].name):$("<h1>").appendTo(c).text(a.hero),e=$("<div>").addClass("current").appendTo(c),f=$("<div>").addClass("desc").appendTo(c),a.hp&&($("<p>").addClass("hp").appendTo(f).text(game.data.ui.hp+": "+a.hp),a["current hp"]=a.hp,$("<p>").addClass("hp").appendTo(e).html("HP <span>"+a.hp+"</span>")),a.mana&&$("<p>").appendTo(f).text(game.data.ui.mana+": "+a.mana),g="",a.damage&&(a.range&&(g=" ("+a.range+")"),$("<p>").addClass("damage").appendTo(f).text(game.data.ui.damage+": "+a.damage+g),a["current damage"]=a.damage,$("<p>").addClass("damage").appendTo(e).html("DMG <span>"+a.damage+"</span>")),a.range&&!g&&$("<p>").appendTo(f).text(game.data.ui.range+": "+a.range),a.armor&&$("<p>").appendTo(f).text(game.data.ui.armor+": "+a.armor+"%"),a.resistance&&$("<p>").appendTo(f).text(game.data.ui.resistance+": "+a.resistance+"%"),a.type&&$("<p>").appendTo(f).text(game.data.ui.type+": "+a.type),a.chance&&$("<p>").appendTo(f).text(game.data.ui.chance+": "+a.chance+"%"),a.percentage&&$("<p>").appendTo(f).text(game.data.ui.percentage+": "+a.percentage+"%"),a.delay&&$("<p>").appendTo(f).text(game.data.ui.delay+": "+a.delay),a.damageType&&$("<p>").appendTo(f).text(game.data.ui.damageType+": "+a.damageType),a.duration&&$("<p>").appendTo(f).text(game.data.ui.duration+": "+a.duration+" "+game.data.ui.turns),a.dot&&$("<p>").appendTo(f).text(game.data.ui.dot+": "+a.dot),a.multiplier&&$("<p>").appendTo(f).text(game.data.ui.multiplier+": "+a.multiplier+"X"),a.description&&(b.attr({title:a.name+": "+a.description}),$("<p>").appendTo(f).addClass("description").text(a.description)),a.kd&&(a.kills=0,a.deaths=0,$("<p>").addClass("kd").appendTo(f).html(game.data.ui.kd+': <span class="kills">0</span>/<span class="deaths">0</span>')),a.buffs&&$("<div>").addClass("buffs").appendTo(c),$.each(a,function(a,c){b.data(a,c)}),b},place:function(a){return a.removeClass||(a=$("#"+a)),this.closest("spot.block").removeClass("block").addClass("free"),this.parent().find(".fx").each(function(){$(this).appendTo(a)}),this.appendTo(a.removeClass("free").addClass("block")),this.data("fx")&&this.data("fx").canvas&&this.data("fx").canvas.appendTo(a),this},select:function(a){var b=$(this);return game.selectedCard&&b[0]===game.selectedCard[0]?b[0]===game.selectedCard[0]&&game.card.unselect():(game.card.unselect(),game.selectedCard=b,game.map.highlight(),b.clone().appendTo(game.states.table.selectedArea).addClass("zoom").removeClass("tutorialblink"),b.addClass("selected"),b.attr("draggable","true"),game.states.table.selectedArea.trigger("select"),setTimeout(function(){game.states.table.selectedArea.addClass("flip")}),a&&a.stopPropagation&&a.stopPropagation()),b},unselect:function(){game.map.unhighlight(),game.selectedCard&&(game.selectedCard.removeClass("selected"),game.selectedCard.attr("draggable","false")),game.selectedCard=null,game.states.table.selectedArea.removeClass("flip"),game.states.table.selectedArea.trigger("unselect");var a=$(".selectedarea .card")[0];setTimeout(function(){$(this).remove()}.bind(a),400)},highlightSource:function(){var a=this,b=a.data("hero");return b&&$(".map .card.player.hero."+b).addClass("source"),a},highlightTargets:function(){var a,b,c,d,e,f=this,g=f.data("hero");if(g&&(a=$(".map .source"),a.hasClasses("hero unit")))if(b=game.map.getPosition(a),c=game.map.getRange(f.data("range")),e=f.data("aoe"),d=f.data("targets"),f.data("type")===game.data.ui.passive)a.hasClass("dead")||a.addClass("casttarget").onrightClick(game.player.passive);else if(f.data("type")===game.data.ui.toggle)a.hasClasses("dead done stunned silenced hexed disabled sleeping cycloned taunted")||a.addClass("casttarget").onrightClick(game.player.toggle);else if(f.data("type")===game.data.ui.active&&!a.hasClasses("dead done stunned frozen silenced hexed disabled sleeping cycloned taunted")){if(d.indexOf(game.data.ui.self)>=0&&a.addClass("casttarget").onrightClick(game.player.cast),d.indexOf(game.data.ui.ally)>=0&&(c===game.data.ui.global?$(".map .player").addClass("casttarget").onrightClick(game.player.cast):game.map.inRange(b,c,function(a){var b=$(".card",a);b.hasClass("player")&&b.addClass("casttarget").onrightClick(game.player.cast)})),d.indexOf(game.data.ui.enemy)>=0&&(c===game.data.ui.global?$(".map .enemy").addClass("casttarget").onrightClick(game.player.cast):game.map.inRange(b,c,function(a){var b=$(".card",a);b.hasClass("enemy")&&b.addClass("casttarget").onrightClick(game.player.cast)})),d.indexOf("Lone")>=0)return b=game.map.getPosition(a.data("ld")),game.map.around(b,c,function(a){a.hasClass("free")&&a.addClass("targetarea").onrightClick(game.player.cast)}),f;d.indexOf(game.data.ui.spot)>=0&&(d.indexOf(game.data.ui.free)>=0?game.map.around(b,c,function(a){a.hasClass("free")&&a.addClass("targetarea").onrightClick(game.player.cast)}):"Radial"===e?game.map.around(b,c,function(a){if(a.addClass("targetarea").onrightClick(game.player.cast),a.hasClass("block")){var b=$(".card",a);b.addClass("targetarea").onrightClick(game.player.cast)}}):"Linear"===e&&game.map.atCross(b,f.data("aoe range"),f.data("aoe width"),function(a){if(a.addClass("targetarea").onrightClick(game.player.cast),a.hasClass("block")){var b=$(".card",a);b.addClass("targetarea").onrightClick(game.player.cast)}}))}return f},strokeSkill:function(){var a=this,b=a.data("hero"),c=$(".map .source"),d=game.map.getPosition(c);return b&&d&&!c.hasClasses("dead done stunned")&&(a.data("aoe")&&(game.castpos=d,game.aoe=a.data("aoe"),"Linear"===game.aoe?(game.aoewidth=a.data("aoe width"),game.aoerange=a.data("aoe range"),game.map.crossStroke(d,game.aoerange,game.aoewidth,"skillarea")):"Radial"===game.aoe&&(game.aoerange=game.map.getRange(a.data("range")),game.aoecastrange=game.map.getRange(a.data("aoe range"))),$(".map .spot, .map .card").hover(function(){var a=$(this);$(".map .spot").removeClass("skillarea skillcast top right left bottom"),a.hasClass("targetarea")?"Linear"===game.aoe?game.map.linearStroke(game.map.getPosition($(this)),game.aoerange,game.aoewidth,"skillcast"):"Radial"===game.aoe&&game.map.radialStroke(game.map.getPosition($(this)),game.aoecastrange,"skillcast"):"Linear"===game.aoe?game.map.crossStroke(game.castpos,game.aoerange,game.aoewidth,"skillarea"):"Radial"===game.aoe&&game.map.radialStroke(game.castpos,game.aoerange,"skillarea")})),a.data("range")&&game.map.radialStroke(d,game.map.getRange(a.data("range")),"skillarea")),a},highlightMove:function(){var a,b=this;if(b.hasClass("player")&&b.hasClasses("unit hero")&&!b.hasClasses("enemy done static dead stunned frozen entangled disabled sleeping cycloned taunted")){if(a=b.data("current speed"),1>a)return b;a>3&&(a=3),game.map.atMovementRange(b,Math.round(a),function(a){a.hasClass("block")||a.addClass("movearea").onrightClick(game.player.move)})}return b},move:function(a){"string"==typeof a&&(a=$("#"+a));var b,c,d=this,e=game.map.getPosition(d),f=game.map.getPosition(a);return a.hasClass("free")&&e!==f&&(game.map.unhighlight(),d.stopChanneling(),d.closest(".spot").removeClass("block").addClass("free"),a.removeClass("free").addClass("block"),b=d.offset(),c=a.offset(),a.data("detour")?(d.animateMove(a.data("detour")),setTimeout(function(){this.card.animateMove(this.destiny)}.bind({card:d,destiny:a}),200)):d.animateMove(a),d.data("movement bonus")?d.data("movement bonus",!1):d.addClass("done"),d.trigger("move",{card:d,target:f}),setTimeout(function(){this.card.parent().find(".fx").each(function(){$(this).appendTo(this.destiny)}),$(this.card).css({transform:""}).prependTo(this.destiny),$(".map .spot").data("detour",!1),game.map.highlight()}.bind({card:d,destiny:a}),400)),d},animateMove:function(a){var b=game.map.getPosition(this),c=game.map.getPosition(a),d=game.map.getX(b),e=game.map.getY(b),f=game.map.getX(c),g=game.map.getY(c),h=100*(f-d),i=100*(g-e);this.css({transform:"translate3d("+(h-50)+"%, "+(i-50)+"%, 100px) rotateX(-30deg)"})},cast:function(a,b){var c,d,e,f,g=this,h=a.data("hero"),i=a.data("skill");return i&&h&&g.data("hero")===h&&("string"==typeof b&&(c=game.data.skills[h][i].targets,b=c.indexOf(game.data.ui.spot)>=0?$("#"+b):$("#"+b+" .card")),b.length&&(g.stopChanneling(),g.trigger("cast",{skill:a,source:g,target:b}),game.skills[h][i].cast(a,g,b),game.audio.sounds.indexOf(h+"/"+i)>=0&&game.audio.play(h+"/"+i),f=a.data("channel"),f&&(g.data("channeling",f).addClass("channeling"),g.on("channel",function(a,b){e=b.source,d=e.data("channeling"),d?(d-=1,e.data("channeling",d)):e.stopChanneling()})),g.hasClass("enemy")?game.enemy.hand-=1:setTimeout(function(){this.select()}.bind(g)),g.addClass("done"),setTimeout(function(){this.discard()}.bind(a),400))),this},stopChanneling:function(){this.data("channeling",!1).removeClass("channeling").off("channel")},passive:function(a){var b=this,c=b.data("hero"),d=b.data("skill");return"string"==typeof a&&(a=$("#"+a+" .card")),d&&c&&a.data("hero")===c&&(a.trigger("passive",{skill:b,target:a}),game.skills[c][d].passive(b,a),b.hasClass("enemy")?game.enemy.hand-=1:a.select(),setTimeout(function(){b.remove()},400)),this},toggle:function(a){var b=this,c=b.data("hero"),d=b.data("skill");return"string"==typeof a&&(a=$("#"+a+" .card")),d&&c&&a.data("hero")===c&&(a.trigger("toggle",{skill:b,target:a}),game.skills[c][d].toggle(b,a),b.hasClass("enemy")?game.enemy.hand-=1:a.select()),this},addBuff:function(a,b){var c=$("<div>").addClass("buff "+b.buff).attr({title:b.name+": "+b.description});return $("<div>").appendTo(c).addClass("img"),$("<div>").appendTo(c).addClass("overlay"),c.data("source",this),a.find(".buffs").append(c),c},hasBuff:function(a){var b=this;return b.find(".buffs ."+a).length},removeBuff:function(a){var b=this;return $.each(a.split(" "),function(){var a=this;b.find(".buffs ."+a).remove(),b.hasClass("selected")&&b.select()}),this},addStun:function(a,b){if(a.hasClass("stunned")){var c=a.data("stun");(!c||b>c)&&a.data("stun",b)}else a.stopChanneling(),this.addBuff(a,{name:"Stun",buff:"stun",description:"Unit is stunned and cannot move, attack or cast"}),a.addClass("stunned").data("stun",b);return this},reduceStun:function(){var a,b=this;return b.hasClass("stunned")&&(a=parseInt(b.data("stun"),10),a>0?b.data("stun",a-1):b.trigger("stunend",{target:b}).data("stun",null).removeClass("stunned").removeBuff("stun")),b.hasClass("selected")&&b.select(),this},discard:function(){this.hasClass("skill")&&(this.trigger("discard",{target:this}),this.hasClass("player")?this.data("deck")===game.data.ui.temp?this.appendTo(game.player.skills.temp):this.appendTo(game.player.skills.cemitery):(this.appendTo(game.enemy.skills.deck),game.enemy.hand-=1))},strokeAttack:function(){var a,b,c=this;return c.hasClasses("done dead stunned disabled disarmed hexed")||(a=game.map.getPosition(c),b=game.map.getRange(c.data("range")),game.map.radialStroke(a,b,c.data("side")+"attack")),c},highlightAttack:function(){var a,b,c=this;return c.hasClass("player")&&c.hasClasses("unit hero")&&!c.hasClasses("enemy done dead stunned frozen")&&(a=game.map.getPosition(c),b=game.map.getRange(c.data("range")),game.map.inRange(a,b,function(a){var b=$(".card",a);b.hasClass("enemy")&&b.addClass("attacktarget").onrightClick(game.player.attack)})),c},attack:function(a){"string"==typeof a&&(a=$("#"+a+" .card"));var b,c=this,d=game.map.getPosition(c),e=game.map.getPosition(a);return c.data("current damage")&&d!==e&&a.data("current hp")&&(c.stopChanneling(),c.trigger("attack",{source:c,target:a}),c.damage(c.data("current damage"),a,game.data.ui.physical),c.trigger("afterattack",{source:c,target:a}),b=c.hasClass("tower")?"tower":c.hasClass("bear")?"bear":c.data("hero"),game.audio.play(b+"/attack"),c.addClass("done")),this},damage:function(a,b,c){if(1>a)return this;a=Math.round(a);var d,e,f,g,h,i,j,k,l,m,n,o,p=this;return c||(c=game.data.ui.physical),i=1-b.data("resistance")/100,c===game.data.ui.magical&&i&&(a=Math.round(a*i)),j=1-b.data("armor")/100,c===game.data.ui.physical&&j&&(a=Math.round(a*j)),"string"==typeof b&&(b=$("#"+b+" .card")),k=b.data("current hp")-a,b.changehp(k),g=game.map.getPosition(b),e=game.map.getX(g),f=game.map.getY(g),h=game.map.getSpot(e,f),d={source:this,target:b,spot:h,x:e,y:f,position:g,damage:a,type:c},b.trigger("damage",d),1>k&&(b.addClass("dead").removeClass("target done").changehp(0),setTimeout(function(){this.trigger("kill",d),b.trigger("die",d),b.die()},2e3),p.hasClass("hero")&&b.hasClass("hero")&&(game[p.data("side")].kills+=1,m=p.data("kills")+1,p.data("kills",m),p.find(".kills").text(m),game[b.data("side")].deaths+=1,n=b.data("deaths")+1,b.data("deaths",n),b.find(".deaths").text(n))),o=b.find(".damaged"),o.length?(l=parseInt(o.text(),10),o.text(l+a).appendTo(b)):o=$("<span>").addClass("damaged").text(a).appendTo(b),p.data("crit")&&(p.data("crit",!1),o.addClass("critical")),this},changedamage:function(a){return a=parseInt(a,10),this.find(".current .damage span").text(a),this.data("current damage",a),this.hasClass("selected")&&this.select(),this},heal:function(a){a=Math.ceil(a);var b,c,d=this.data("current hp"),e=this.data("hp"),f=d+a;return f>e?(a=e-d,this.changehp(e)):this.changehp(f),a>0&&(b=this.find(".heal"),b.length?(c=parseInt(b.text(),10),b.text(c+a)):b=$("<span>").addClass("heal").text(a).appendTo(this)),this},changehp:function(a){return 1>a&&(a=0),this.find(".current .hp span").text(a),this.data("current hp",a),this.hasClass("selected")&&this.select(),this},die:function(){this.addClass("dead").removeClass("target done").changehp(0);var a,b=game.map.getPosition(this),c=$("#"+b);return c.hasClass("cript")||c.removeClass("block").addClass("free"),this.hasClass("selected")&&this.select(),this.hasClass("hero")?(a=this.data("deaths")+1,this.data("deaths",a),this.find(".deaths").text(a),this.data("reborn",game.time+game.deadLength),this.hasClass("player")?this.appendTo(game.player.heroesDeck):this.hasClass("enemy")&&this.appendTo(game.enemy.heroesDeck)):this.hasClass("tower")?this.hasClass("player")?game.match.lose():this.hasClass("enemy")&&game.match.win():this.remove(),this},reborn:function(a){this.removeClass("dead");var b,c,d=this.data("hp");if(this.find(".hp").text(d),this.data("current hp",d),this.data("reborn",null),!a)if(this.hasClass("player"))for(b=0,c=3,a=game.map.toId(b,c);$("#"+a).hasClass("block");)b+=1,a=game.map.toId(b,c);else if(this.hasClass("enemy"))for(b=11,c=1,a=game.map.toId(b,c);$("#"+a).hasClass("block");)b-=1,a=game.map.toId(b,c);return this.place(a),this.trigger("reborn"),this}};