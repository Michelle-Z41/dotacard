game.skills={pud:{hook:{cast:function(a,b,c){var d,e,f,g,h=game.map.getX(b.parent()),i=game.map.getY(b.parent()),j=game.map.getX(c),k=game.map.getY(c),l=a.data("aoe range"),m=0,n=0;for(i-k>0&&(n=-1),0>i-k&&(n=1),h-j>0&&(m=-1),0>h-j&&(m=1),c=game.map.getSpot(h+m,i+n),e=1;l>=e;e+=1){var o=game.map.getSpot(h+e*m,i+e*n);if(o){var p=o.find(".card");if(p.length){d=p;break}}}d&&d.hasClasses("hero unit")&&(d.hasClass("enemy")&&b.damage(a.data("damage"),d,a.data("damage type")),j=game.map.getX(d.parent()),k=game.map.getY(d.parent()),f=-212*m*(Math.abs(h-j)-1),g=-313*n*(Math.abs(i-k)-1),setTimeout(function(){m?d.css({left:"calc(50% + "+f+"px)"}):n&&d.css({top:"calc(50% + "+g+"px)"})}.bind({hooked:d,dx:f,dy:g,x:m,y:n}),600),setTimeout(function(){this.hooked.place(this.target).css({transition:"all 0.4s",top:"50%",left:"50%"}),this.source.select()}.bind({source:b,hooked:d,target:c}),1200))}},rot:{toggle:function(a,b){a.hasClass("on")?(a.removeClass("on"),b.off("turnend.rot"),b.data("pud-rot",null),b.removeClass("pud-rot")):(a.addClass("on"),b.on("turnend.rot",game.skills.pud.rot.turnendcast),b.data("pud-rot",a),b.addClass("pud-rot"))},turnendcast:function(a,b){var c=b.target,d=game.map.getPosition(c),e=c.data("side"),f="enemy"===e?"player":"enemy",g=c.data("pud-rot");c.damage(g.data("damage"),c,g.data("damage type")),game.map.inRange(d,game.map.getRange(g.data("aoe range")),function(a){var b=a.find(".card."+f);if(b.length)if(c.damage(g.data("damage"),b,g.data("damage type")),b.data("pud-rot"))b.data("pud-rot",g.data("duration"));else{b.data("pud-rot",g.data("duration")),c.addBuff(b,g.data("buff"));var d=b.data("speed")-1;b.data("currentspeed",d),b.on("turnend.rot",game.skills.pud.rot.turnend)}})},turnend:function(a,b){var c=b.target,d=c.data("pud-rot");if(d>0)d-=1,c.data("pud-rot",d);else{var e=c.data("current speed")+1;c.data("currentspeed",e),c.off("turnend.rot"),c.data("pud-rot",null),c.removeBuff("pud-rot")}}},passive:{passive:function(a,b){var c=b.data("resistance")+a.data("resistance bonus");b.data("resistance",c),game.skills.pud.passive.kill.call({skill:a,source:b}),b.on("kill",game.skills.pud.passive.kill.bind({skill:a,source:b}))},kill:function(){var a=this.skill,b=this.source,c=b.data("kills"),d=b.data("damage"),e=a.data("damage bonus")*c;b.changedamage(d+e);var f=b.data("hp"),g=a.data("hp bonus")*c;b.changehp(f+g)}},ult:{cast:function(a,b,c){var d=a.data("channel");b.addClass("channeling").data("channeling",d),b.data("dismember",{target:c,skill:a}),b.on("channel",game.skills.pud.ult.channel),c.addClass("disabled")},channel:function(a,b){var c=b.source,d=c.data("dismember"),e=d.target,f=d.skill,g=c.data("channeling");if(g){var h=f.data("type"),i=f.data("dot");c.damage(i,e,h)}else e.removeClass("disabled")}}},cm:{slow:{cast:function(a,b,c){var d=game.map.getPosition(c);"turn"===game.status&&game.states.table.animateCast(a,d,game.states.table.playerCemitery);var e=b.data("side"),f="enemy"===e?"player":"enemy";game.map.inRange(d,game.map.getRange(a.data("aoe range")),function(c){var d=c.find(".card."+f);if(d.length)if(b.damage(a.data("damage"),d,a.data("damage type")),d.data("cm-slow"))d.data("cm-slow",a.data("duration"));else{d.data("cm-slow",a.data("duration")),b.addBuff(d,a.data("buff"));var e=d.data("speed")-1;d.data("current speed",e),d.on("turnstart.cm-slow",game.skills.cm.slow.turnstart)}})},turnstart:function(a,b){var c=b.target,d=c.data("cm-slow");if(d>0)d-=1,c.data("cm-slow",d);else{var e=c.data("current speed")+1;c.data("current speed",e),c.off("turnstart.cm-slow"),c.data("cm-slow",null),c.removeBuff("cm-slow")}}},aura:{passive:function(a,b){var c=b.data("side");game[c].cardsPerTurn+=1,b.on("die.cm-aura"),b.on("reborn.cm-aura"),b.addBuff(b,a.data("buff"))},die:function(a,b){var c=b.target,d=c.data("side");game[d].cardsPerTurn-=1},reborn:function(a,b){var c=b.target,d=c.data("side");game[d].cardsPerTurn+=1}},freeze:{cast:function(a,b,c){b.addBuff(c,a.data("buff")),c.addClass("frozen"),c.data("cm-freeze",{source:b,skill:a,duration:a.data("duration")}),c.on("turnend.cm-freeze",this.dot)},dot:function(a,b){var c=b.target,d=c.data("cm-freeze"),e=d.source,f=d.skill,g=d.duration;g>0?(e.damage(f.data("dot"),c,f.data("damage type")),g-=1,d.duration=g,c.data("cm-freeze",d)):(c.removeClass("frozen"),c.data("cm-freeze",null),c.off("turnend.cm-freeze"),c.removeBuff("cm-freeze"))}},ult:{cast:function(a,b){var c=game.map.getPosition(b);"turn"===game.status&&game.states.table.animateCast(a,c,game.states.table.playerCemitery),b.on("channel",game.skills.cm.ult.channel).data("cm-ult",a),b.trigger("channel",{target:b})},channel:function(a,b){var c=b.target,d=c.data("cm-ult"),e=game.map.getPosition(c),f=c.data("side"),g="enemy"===f?"player":"enemy";game.map.inRange(e,game.map.getRange(d.data("aoe range")),function(a){var b=a.find(".card."+g);if(b.length)if(c.damage(d.data("damage"),b,d.data("damage type")),b.data("cm-ult"))b.data("cm-ult",d.data("duration"));else{b.data("cm-ult",d.data("duration")),c.addBuff(b,d.data("buff"));var e=b.data("speed")-1;b.data("current speed",e),b.on("turnstart.cm-ult",game.skills.cm.ult.turnstart)}})},turnstart:function(a,b){var c=b.target,d=c.data("cm-ult");if(d>0)d-=1,c.data("cm-ult",d);else{var e=c.data("current speed")+1;c.data("current speed",e),c.off("turnstart.cm-ult"),c.data("cm-ult",null),c.removeBuff("cm-ult")}}}},ktol:{illuminate:{cast:function(a,b,c){},release:function(){}},illuminateult:{cast:function(a,b,c){},release:function(){}},leak:{cast:function(a,b,c){},movement:function(){}},mana:{cast:function(a,b,c){}},ult:{cast:function(a,b){}},blind:{cast:function(a,b,c){},hit:function(){}},recall:{cast:function(a,b,c){},damage:function(){}}},nyx:{stun:{cast:function(a,b,c){}},burn:{cast:function(a,b,c){},damage:function(){}},spike:{cast:function(a,b){},damage:function(){}},ult:{cast:function(a,b){},damage:function(){}}},ld:{summon:{cast:function(a,b,c){var d=b.data("side"),e=$("."+d+".unit.ld.spiritbear");e.hasClass("summoned")?e.addClass("summoned"):(b.data("bear",e),e.addBuff(e,game.data.buffs.ld.demolish),e.data("ld",b),e.data("ld-demolish",a.data("demolish percentage")),e.on("attack",this.demolish),e.addBuff(e,game.data.buffs.ld.entangle),e.on("attack",this.entangle),e.data("ld-entangle-skill",a),e.data("ld-return-cooldown",a.data("return cooldown")),e.on("damage",game.skills.ld.bearreturn.breakreturn),e.on("death",game.skills.ld.summon.death));var f=$("."+d+".skill.ld-return");f.appendTo(game.player.skills.temp),e.changehp(e.data("hp")),e.place(c),"player"===d&&e.select()},demolish:function(a,b){var c=b.source,d=b.target;if(d.hasClass("tower")){var e=c.data("current damage")*c.data("ld-demolish")/100;c.damage(e,d,"Physical")}},entangle:function(a,b){var c=b.source,d=b.target,e=c.data("ld-entangle-skill"),f=e.data("entangle chance")/100;game.random()<f&&!d.hasClass("entangled")&&(c.addBuff(d,game.data.buffs.ld.entangle),d.addClass("entangled"),d.data("ld-entangle",{duration:e.data("entangle duration"),source:c,skill:e}),d.on("turnend.ld-entangle",game.skills.ld.summon.entangling))},entangling:function(a,b){var c=b.target,d=c.data("ld-entangle"),e=d.skill,f=d.source;d.duration>0?(d.duration-=1,c.data("ld-entangle",d),f.damage(e.data("entangle damage"),c,"Physical")):(c.removeClass("entangled"),c.off("turnend.ld-entangle"),c.data("ld-entangle",null),c.removeBuff("ld-entangle"))},death:function(){}},bearreturn:{cast:function(a,b,c){var d=b.data("side"),e=$("."+d+".hero.ld"),f=e.data("bear");f.css({opacity:0}),"turn"===game.status&&a.css({opacity:0}),setTimeout(function(){this.bear.place(this.target).css({opacity:1}),this.ld.select()}.bind({ld:e,bear:f,target:c}),400)},breakreturn:function(a,b){var c=b.target,d=c.data("side"),e=$("."+d+".skill.ld-return");e.appendTo(game.states.table.playerTemp),c.data("current-return-cooldown",c.data("ld-return-cooldown")),c.on("turnstart.ld-return",game.skills.ld.bearreturn.turnstart)},turnstart:function(a,b){var c=b.target,d=(c.data("side"),c.data("current-return-cooldown"));d>0?d-=1:(c.data("current-return-cooldown",null),c.off("turnstart.ld-return"))}},rabid:{cast:function(a,b){var c=b.data("side"),d=$("."+c+".hero.ld");d.addBuff(d,a.data("buff"));var e=d.data("current damage");d.changedamage(e+a.data("damage bonus"));var f=d.data("current speed");d.data("current speed",f+1);var g=d.data("bear");if(g&&!g.hasClass("dead")){var h=g.data("current damage");g.changedamage(h+a.data("damage bonus"));var i=g.data("current speed");g.data("current speed",i+1),d.addBuff(g,a.data("buff"))}d.data("ld-rabid",a.data("duration")),d.data("ld-rabid-damage-bonus",a.data("damage bonus")),d.on("turnstart.ld-rabid",game.skills.ld.rabid.turnstart)},turnstart:function(a,b){var c=b.target,d=c.data("ld-rabid");if(d>0)d-=1,c.data("ld-rabid",d);else{var e=c.data("current damage");c.changedamage(e-c.data("ld-rabid-damage-bonus"));var f=c.data("current speed");c.data("current speed",f-1),c.off("turnstart.ld-rabid"),c.data("ld-rabid",null),c.removeBuff("ld-rabid");var g=c.data("bear");if(g&&g.hasBuff("ld-rabid")){var h=g.data("current damage");g.changedamage(h-c.data("ld-rabid-damage-bonus"));var i=g.data("current speed");g.data("current speed",i-1),g.removeBuff("ld-rabid")}}}},passive:{passive:function(a,b){var c=b.data("side"),d=$("."+c+".hero.ld");d.addBuff(d,a.data("buff"));var e=$("."+c+".skill.ld-rabid"),f=e.data("duration");e.data("duration",f+a.data("rabid bonus"));var g=$("."+c+".skill.ld-ult"),h=g.data("hp bonus");g.data("hp bonus",h+a.data("ult bonus"));var i=d.data("bear");if(i){d.addBuff(i,a.data("buff"));var j=i.data("current damage");i.changedamage(j+a.data("bear bonus"));var k=i.data("hp"),l=i.data("current hp"),m=l/k;i.data("hp",k+a.data("hp bonus")),i.data("current hp",i.data("hp")*m)}}},ult:{toggle:function(a,b){b.hasClass("transformed")?game.skills.ld.ult.cast(a,b):game.skills.ld.transform.cast(a,b)},cast:function(a,b){var c=b.data("side"),d=$("."+c+".skill.ld-transform");d.appendTo(game.player.skills.permanent);var e=$("."+c+".skill.ld-cry");e.appendTo(game.player.skills.permanent),a.appendTo(game.player.skills.temp);var f=b.data("hp"),g=b.data("current hp"),h=g/f;b.data("hp",f+a.data("hp bonus")),b.data("current hp",b.data("hp")*h);b.data("armor");b.data("armor",+a.data("armor bonus")),b.data("range",game.data.ui.melee),b.addClass("transformed")}},transform:{cast:function(a,b){var c=b.data("side"),d=$("."+c+".skill.ld-ult");d.appendTo(game.player.skills.permanent),a.appendTo(game.player.skills.temp);var e=$("."+c+".skill.ld-cry");e.appendTo(game.player.skills.temp);var f=b.data("hp"),g=b.data("current hp"),h=g/f;b.data("hp",f-a.data("hp bonus")),b.data("current hp",b.data("hp")*h);b.data("armor");b.data("armor",-a.data("armor bonus")),b.data("range",game.data.ui["short"]),b.removeClass("transformed")}},cry:{cast:function(a,b){b.addBuff(b,a.data("buff"));b.data("armor");b.data("armor",+a.data("armor bonus"));var c=b.data("current damage");b.changedamage(c+a.data("damage bonus"));var d=b.data("bear");if(d){b.addBuff(d,a.data("buff"));var e=d.data("armor");d.data("armor",e+a.data("armor bonus"));var f=d.data("current damage");d.changedamage(f+a.data("damage bonus"))}b.data("ld-cry",a.data("duration")),b.data("ld-cry-damage-bonus",a.data("damage bonus")),b.data("ld-cry-armor-bonus",a.data("armor bonus")),b.on("turnstart.ld-cry",game.skills.ld.cry.turnstart),a.appendTo(game.player.skills.temp)},turnstart:function(a,b){var c=b.target,d=c.data("ld-cry");if(d>0)d-=1,c.data("ld-cry",d);else{var e=c.data("current damage");c.changedamage(e-c.data("ld-cry-damage-bonus"));var f=c.data("armor");c.data("armor",f-c.data("ld-cry-armor-bonus")),c.off("turnstart.ld-cry"),c.data("ld-cry",null),c.removeBuff("ld-cry");var g=c.data("bear");if(g&&g.hasBuff("ld-cry")){var h=g.data("current damage");g.changedamage(h-c.data("ld-cry-damage-bonus"));var i=g.data("armor bonus");g.data("armor bonus",i-c.data("ld-cry-armor-bonus")),g.removeBuff("ld-rabid")}}}}},wk:{stun:{cast:function(a,b,c){var d=b,e=a.data("stun duration"),f=a.data("dot duration");"turn"===game.status&&game.states.table.animateCast(a,c,game.states.table.playerCemitery),d.damage(a.data("damage"),c,a.data("damage type")),d.addStun(c,e),c.on("turnend.wk-stun",this.dot).data("wk-stun",{duration:e+f,source:b,skill:a})},dot:function(a,b){var c,d=b.target,e=d.data("wk-stun"),f=e.source,g=e.skill,h=g.data("dot duration"),i=e.duration;i>0?(i===h&&(f.addBuff(d,g.data("buff"),h),c=d.data("speed")-1,d.data("current speed",c)),h>=i&&f.damage(g.data("dot"),d,g.data("damage type")),e.duration-=1,d.data("wk-stun",e)):(c=d.data("speed")+1,d.data("current speed",c),d.removeBuff("wk-stun"),d.off("turnend.wk-stun"),d.data("wk-stun",null))}},lifesteal:{passive:function(a,b){var c=b.data("side"),d=$(".card.heroes."+c);d.on("attack.wk-lifesteal",this.attack),d.data("wk-lifesteal",a),b.addBuff(d,a.data("buff")),b.on("die.wk-lifesteal",this.die),b.on("reborn.wk-lifesteal",this.reborn)},attack:function(a,b){var c=b.source,d=(b.target,c.data("current damage")),e=c.data("wk-lifesteal"),f=e.data("percentage")/100;c.heal(d*f)},die:function(a,b){var c=b.target,d=c.data("side"),e=$(".card.heroes."+d);e.removeBuff("wk-lifesteal"),e.off("attack.wk-lifesteal"),e.data("wk-lifesteal",null)},reborn:function(a,b){var c=b.target,d=c.data("wk-lifesteal"),e=c.data("side"),f=$(".card.heroes."+e);c.addBuff(f,d.data("buff")),f.on("attack.wk-lifesteal",this.attack),f.data("wk-lifesteal",d)}},crit:{passive:function(a,b){b.addBuff(b,a.data("buff")),b.on({"attack.wk":this.attack,"afterattack.wk":this.afterattack}).data("wk-crit",a)},attack:function(a,b){var c=b.source,d=(b.target,c.data("wk-crit")),e=c.data("current damage"),f=d.data("chance")/100,g=d.data("percentage")/100;game.random()<f&&(game.audio.play("crit"),e*=g,c.data({crit:!0,currentdamage:e}))},afterattack:function(a,b){var c=b.source;c.data("current damage",c.data("damage"))}},ult:{passive:function(a,b){b.on("die.wk-ult",this.die),b.data("wk-ult-skill",a)},die:function(a,b){var c=b.target,d=b.spot,e=c.data("wk-ult-skill");$("#"+d).addClass("cript"),c.on("turnstart.wk-ult",game.skills.wk.ult.resurrect).data("wk-ult",{skill:e,spot:d,duration:e.data("delay")}),game.map.inRange(d,game.map.getRange(e.data("aoe range")),function(a){var b="enemy",d=c.data("side");"enemy"===d&&(b="player");var f=a.find(".card."+b);if(f.length){c.addBuff(f,e.data("buff"));var g=f.data("speed")-1;f.data("current speed",g),f.on("turnstart.wk-ult",game.skills.wk.ult.turnstart),f.data("wk-ult",e.data("duration"))}}),c.off("die.wk-ult")},resurrect:function(a,b){var c=b.target,d=c.data("wk-ult"),e=(d.skill,d.spot),f=d.duration;c.data("side");f>0?(d.duration-=1,c.data("wk-ult",d)):($("#"+e).removeClass("cript"),c.reborn(e).data("wk-ult",null),c.off("turnstart.wk-ult"))},turnstart:function(a,b){var c=b.target,d=c.data("wk-ult");if(d>0)d-=1,c.data("wk-ult",d);else{var e=c.data("current speed")+1;c.data("current speed",e),c.off("turnstart.wk-ult"),c.data("wk-ult",null),c.removeBuff("wk-ult")}}}},am:{burn:{passive:function(a,b){b.on("attack.burn",this.attack).data("am-burn",a),b.addBuff(b,a.data("buff")),b.on("die.am-burn",this.die),b.on("reborn.am-burn",this.reborn)},attack:function(a,b){var c=b.source,d=b.target,e=d.data("hero"),f=c.data("side");if(game.audio.play("am/burn"),"enemy"===f&&e){var g=game.states.table.playerHand.children("."+e);if(g.length>0){var h=game.deck.randomCard(g,"noseed");h.discard()}}},die:function(a,b){var c=b.target;c.removeBuff("am-burn"),c.off("attack.am-burn").data("am-burn",null)},reborn:function(a,b){var c=b.target,d=c.data("am-burn");c.addBuff(c,d.data("buff")),c.on("attack.am-burn",this.attack).data("am-burn",d)}},passive:{passive:function(a,b){b.data("resistance",a.data("percentage")/100)}},blink:{cast:function(a,b,c){b.css({opacity:0}),setTimeout(function(){this.source.place(this.target).css({opacity:1}),this.source.select()}.bind({source:b,target:c}),400)}},ult:{cast:function(a,b,c){var d=game.map.getPosition(c);"turn"===game.status&&game.states.table.animateCast(a,d,game.states.table.playerCemitery);var e=b.data("side"),f="enemy"===e?"player":"enemy",g=game.enemy.maxCards-game.enemy.hand;g*=a.data("multiplier"),game.map.inRange(d,game.map.getRange(a.data("aoe range")),function(c){var d=c.find(".card."+f);d.length&&b.damage(g,d,a.data("damage type"))})}}}};