game.match={online:function(){game.mode="online",game.seed=(new Date).valueOf(),game.id=btoa(game.seed),game.db({set:"waiting",data:{id:game.id}},function(a){game.id===a.id?(game.player.type="challenged",game.match.wait()):(game.id=a.id,game.seed=parseInt(atob(game.id),10),game.player.type="challenger",game.match.found())})},wait:function(){game.loader.addClass("loading"),game.currentData.challenged=game.player.name,game.db({set:game.id,data:game.currentData},function(){game.message.text(game.data.ui.waiting),game.tries=1,game.match.search()})},search:function(){clearTimeout(game.timeout),game.db({get:game.id},function(a){a.challenger?(game.triesCounter.text(""),game.currentData=a,game.match.battle.call(game.states.choose,a.challenger,"challenger")):(game.triesCounter.text(game.tries+=1),game.tries>game.waitLimit?(game.message.text(game.data.ui.noenemy),setTimeout(function(){game.states.changeTo("menu")},2e3)):game.timeout=setTimeout(game.match.search,1e3))})},found:function(){game.message.text(game.data.ui.gamefound),game.db({get:game.id},function(a){a.challenged?(game.loader.removeClass("loading"),game.triesCounter.text(""),game.currentData=a,game.currentData.challenger=game.player.name,game.db({set:game.id,data:game.currentData},function(){game.match.battle(a.challenged,"challenged")})):game.load.reset()})},pick:function(){0===$(".slot.available").length?game.states.choose.counter.text(game.data.ui.startsin+": "+game.states.choose.count+" "+game.data.ui.cardsperturn+": "+game.player.cardsPerTurn):game.states.choose.counter.text(game.data.ui.pickdeck+": "+game.states.choose.count)},pickCount:function(){game.states.choose.count-=1,0!==$(".slot.available").length?game.states.choose.counter.text(game.data.ui.pickdeck+": "+game.states.choose.count):game.states.choose.counter.text(game.data.ui.startsin+": "+game.states.choose.count+" "+game.data.ui.cardsperturn+": "+game.player.cardsPerTurn),game.states.choose.count<0?(game.states.choose.counter.text(game.data.ui.getready),game.states.choose.disablePick(),game.match.fillDeck()):setTimeout(game.match.pickCount,1e3)},fillDeck:function(){$(".slot").each(function(){var a,b=$(this);b.hasClass("available")&&(a=game.deck.randomCard($(".pickbox .card").not(".dead"),"noseed"),b.append(a).removeClass("available selected"),game.player.picks[b.data("slot")]=a.data("hero")),0===$(".choose .card.selected").length&&game.states.choose.pickDeck.children().first().click(),5===game.player.picks.length&&game.match.sendDeck()})},sendDeck:function(){game.states.choose.el.removeClass("turn"),game.states.choose.pickDeck.css("margin-left",0),game.states.choose.tries=1,"challenged"===game.player.type&&(game.currentData.challengedDeck=game.player.picks.join("|"),game.db({set:game.id,data:game.currentData},function(){game.match.getChallengerDeck()})),"challenger"===game.player.type&&game.match.getChallengedDeck()},getChallengerDeck:function(){clearTimeout(game.timeout),game.message.text(game.data.ui.loadingdeck),game.loader.addClass("loading"),game.db({get:game.id},function(a){a.challengerDeck?(game.triesCounter.text(""),game.currentData=a,game.enemy.picks=game.currentData.challengerDeck.split("|"),game.states.choose.reset(),game.states.changeTo("table")):(game.triesCounter.text(game.tries+=1),game.tries>game.connectionLimit?game.load.reset():game.timeout=setTimeout(game.match.getChallengerDeck,1e3))})},getChallengedDeck:function(){clearTimeout(game.timeout),game.message.text(game.data.ui.loadingdeck),game.loader.addClass("loading"),game.db({get:game.id},function(a){a.challengedDeck?(game.triesCounter.text(""),game.currentData=a,game.currentData.challengerDeck=game.player.picks.join("|"),game.enemy.picks=game.currentData.challengedDeck.split("|"),game.db({set:game.id,data:game.currentData},function(){game.states.choose.reset(),game.states.changeTo("table")})):(game.triesCounter.text(game.tries+=1),game.tries>game.connectionLimit?game.load.reset():game.timeout=setTimeout(game.match.getChallengedDeck,1e3))})},battle:function(a,b){game.status="picking",game.loader.removeClass("loading"),game.states.choose.el.addClass("turn"),game.enemy.name=a,game.enemy.type=b,game.message.html(game.data.ui.battlefound+" <b>"+game.player.name+'</b> vs <b class="enemy">'+game.enemy.name+"</b>"),game.states.choose.counter.show(),game.audio.play("battle"),game.states.choose.count=game.timeToPick,game.states.choose.enablePick(),setTimeout(game.match.pickCount,1e3)},start:function(){game.states.table.el.click(function(a){var b=$(a.target);b.closest(".selected").length||b.closest(".selectedarea").length||game.card.unselect()}),game.loader.addClass("loading"),game.message.text(game.data.ui.battle),game.audio.play("horn"),game.match.placePlayerHeroes(),game.match.placeEnemyHeroes(),game.match.buildSkills(),game.tower.place(),game.tree.place(),game.states.table.buildUnits(),game.match.started=!0,game.turn.build(),setTimeout(game.turn.begin,3e3)},placePlayerHeroes:function(){game.player.picks&&(game.player.mana=0,game.player.heroesDeck=game.deck.build({name:"heroes",filter:game.player.picks,cb:function(a){a.addClass("player").appendTo(game.states.table.player);var b=0,c=6;$.each(a.data("cards"),function(a,d){var e=game.player.picks.indexOf(d.data("hero"));d.addClass("player hero").data("side","player").on("click.select",game.card.select),d.place(game.map.toId(b+e,c)),game.player.mana+=d.data("mana")})}}))},placeEnemyHeroes:function(){game.enemy.picks&&(game.enemy.mana=0,game.enemy.heroesDeck=game.deck.build({name:"heroes",filter:game.enemy.picks,cb:function(a){a.addClass("enemy").hide().appendTo(game.states.table.enemy);var b=0,c=6;$.each(a.data("cards"),function(a,d){var e=game.enemy.picks.indexOf(d.data("hero"));d.addClass("enemy hero").data("side","enemy").on("click.select",game.card.select),d.place(game.map.mirrorPosition(game.map.toId(b+e,c))),game.enemy.mana+=d.data("mana")})}}))},buildSkills:function(a){game.player.manaBuild(),game.player.skills={},game.player.skills.hand=$("<div>").appendTo(game.states.table.player).addClass("player deck skills hand"),game.player.skills.sidehand=$("<div>").appendTo(game.states.table.player).addClass("player deck skills sidehand"),game.player.skills.temp=$("<div>").hide().appendTo(game.states.table.player).addClass("player deck skills temp"),game.player.skills.ult=$("<div>").hide().appendTo(game.states.table.player).addClass("player deck skills ult"),game.player.skills.cemitery=$("<div>").hide().appendTo(game.states.table.player).addClass("player deck skills cemitery"),game.player.skills.deck=game.deck.build({name:"skills",multi:a?!1:"cards",filter:game.player.picks,cb:function(a){a.addClass("player available").hide().appendTo(game.states.table.player),$.each(a.data("cards"),function(a,b){b.addClass("player skill").data("side","player").on("click.select",game.card.select),"ult"===b.data("skill")?b.appendTo(game.player.skills.ult):b.data("deck")===game.data.ui.temp&&b.appendTo(game.player.skills.temp)})}}),game.enemy.maxCards=Math.round(game.enemy.mana/2),game.enemy.cardsPerTurn=1+Math.round(game.enemy.mana/10),game.enemy.hand=0,game.enemy.skills={},game.enemy.skills.deck=game.deck.build({name:"skills",filter:game.enemy.picks,cb:function(a){a.addClass("enemy hand cemitery toggle").appendTo(game.states.table.enemy),$.each(a.data("cards"),function(a,b){b.hide().addClass("enemy skill").data("side","enemy")})}})},sendData:function(){game.message.text(game.data.ui.uploadingturn),game.currentData[game.player.type+"Turn"]=game.player.turn,game.currentData.moves=game.currentData.moves.join("|"),game.db({set:game.id,data:game.currentData},function(){setTimeout(game.turn.begin,1e3)})},getData:function(){game.message.text(game.data.ui.loadingturn),clearTimeout(game.timeout),game.db({get:game.id},function(a){a[game.enemy.type+"Turn"]===game.enemy.turn?(game.triesCounter.text(""),game.currentData=a,game.enemy.move()):(game.tries+=1,game.triesCounter.text(game.tries),game.tries>game.connectionLimit?game.load.reset():game.timeout=setTimeout(game.match.getData,1e3))})},win:function(){game.winner=game.player.name,game.states.table.el.removeClass("unturn"),game.states.table.el.addClass("turn"),game.message.text(game.data.ui.win),game.match.sendData(),game.status="over",game.states.table.showResults()},lose:function(){game.winner=game.enemy.name,game.states.table.el.removeClass("turn"),game.states.table.el.addClass("unturn"),game.message.text(game.data.ui.lose),game.loader.removeClass("loading"),game.status="over",game.states.table.showResults()},end:function(){game.match.started=!1}};