game.skills.pud={hook:{cast:function(a,b,c){var d,e,f,g,h=game.map.getX(b.parent()),i=game.map.getY(b.parent()),j=game.map.getX(c),k=game.map.getY(c),l=a.data("aoe range"),m=0,n=0;for(i-k>0&&(n=-1),0>i-k&&(n=1),h-j>0&&(m=-1),0>h-j&&(m=1),c=game.map.getSpot(h+m,i+n),e=1;l>=e;e+=1){var o=game.map.getSpot(h+e*m,i+e*n);if(o){var p=o.find(".card");if(p.length){d=p;break}}}d&&d.hasClasses("hero unit")&&(d.hasClass("enemy")&&b.damage(a.data("damage"),d,a.data("damage type")),j=game.map.getX(d.parent()),k=game.map.getY(d.parent()),f=-212*m*(Math.abs(h-j)-1),g=-313*n*(Math.abs(i-k)-1),setTimeout(function(){m?d.css({left:"calc(50% + "+f+"px)"}):n&&d.css({top:"calc(50% + "+g+"px)"})}.bind({hooked:d,dx:f,dy:g,x:m,y:n}),600),setTimeout(function(){this.hooked.place(this.target).css({transition:"all 0.4s",top:"50%",left:"50%"}),this.source.select()}.bind({source:b,hooked:d,target:c}),1200))}},rot:{toggle:function(a,b){a.hasClass("on")?(a.removeClass("on"),b.off("turnend.rot"),b.data("pud-rot",null),b.removeClass("pud-rot")):(a.addClass("on"),b.on("turnend.rot",game.skills.pud.rot.turnendcast),b.data("pud-rot",a),b.addClass("pud-rot"))},turnendcast:function(a,b){var c=b.target,d=game.map.getPosition(c),e=c.data("side"),f="enemy"===e?"player":"enemy",g=c.data("pud-rot");c.damage(g.data("damage"),c,g.data("damage type")),game.map.inRange(d,game.map.getRange(g.data("aoe range")),function(a){var b=a.find(".card."+f);if(b.length)if(c.damage(g.data("damage"),b,g.data("damage type")),b.data("pud-rot"))b.data("pud-rot",g.data("duration"));else{b.data("pud-rot",g.data("duration")),c.addBuff(b,g.data("buff"));var d=b.data("speed")-1;b.data("currentspeed",d),b.on("turnend.rot",game.skills.pud.rot.turnend)}})},turnend:function(a,b){var c=b.target,d=c.data("pud-rot");if(d>0)d-=1,c.data("pud-rot",d);else{var e=c.data("current speed")+1;c.data("currentspeed",e),c.off("turnend.rot"),c.data("pud-rot",null),c.removeBuff("pud-rot")}}},passive:{passive:function(a,b){var c=b.data("resistance")+a.data("resistance bonus");b.data("resistance",c),game.skills.pud.passive.kill.call({skill:a,source:b}),b.on("kill",game.skills.pud.passive.kill.bind({skill:a,source:b}))},kill:function(){var a=this.skill,b=this.source,c=b.data("kills"),d=b.data("damage"),e=a.data("damage bonus")*c;b.changedamage(d+e);var f=b.data("hp"),g=a.data("hp bonus")*c;b.changehp(f+g)}},ult:{cast:function(a,b,c){var d=a.data("channel");b.addClass("channeling").data("channeling",d),b.data("dismember",{target:c,skill:a}),b.on("channel",game.skills.pud.ult.channel),c.addClass("disabled")},channel:function(a,b){var c=b.source,d=c.data("dismember"),e=d.target,f=d.skill,g=c.data("channeling");if(g){var h=f.data("type"),i=f.data("dot");c.damage(i,e,h)}else e.removeClass("disabled")}}};