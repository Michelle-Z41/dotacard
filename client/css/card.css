.card h1 {
  font-family: "Open Sans", "open sans",  "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", 'Segoe UI', Tahoma, Verdana, Arial, Helvetica, sans-serif;
}
.card .damaged,
.card .heal {
  font-family: "Sansita One", "Open Sans", "open sans",  "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, Helvetica, sans-serif;
}

.deck .card {
  float: left;
}

.pickbox .card {
  margin: 0 -50px;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0) translateZ(0) scale(0.4);
}

.pickbox .card.selected {
  margin: 0 22px;
  transform: translate3d(-50%, -50%, 0) scale(1);
}

.pickedbox .card {
  animation: pickedboxslidedown 0.5s;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0) scale(0.4);
}
@keyframes pickedboxslidedown {
  0% {top: 36%;}
  100% {top: 50%;}
}
.pickedbox .card.heroes h1,
.pickedbox .card.heroes .current,
.pickedbox .card.heroes .desc,
.pickedbox .card.heroes .buff {
  opacity: 0;
}
.pickedbox .card.heroes .portrait .img,
.pickedbox .card.heroes .portrait .overlay {
  height: 265px;
  background-size: 225%;
}
.pickedbox .card.heroes:hover .portrait .img {
  background-size: 260%;
}

.card.dragTargetClone.choose {
  transform: translate(30px, 40px) scale(0.75);
}

.choose .card .kd,
.card.dragTargetClone.choose .kd,
.choose .card .damaged,
.choose .card .heal {
  display: none;
}
.card.dragTarget {
  transition: all 0s;
  visibility: hidden;
  pointer-events: none;
}
.card.dragTargetClone {
  transition: all 0s;
  position: absolute;
  z-index: 25;
  transform-origin: 0 0;
  pointer-events: none;
}

.card {
  position: relative;
  display: inline-block;
  /* cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer; */
  text-align: left;
  transition: all 0.3s;
  padding: 0;
  width: 200px;
  height: 300px;
  border-radius: 8px;
  z-index: 1;
  color: #4d4843;
  cursor: pointer;
  transform: translateZ(0);
  background: #898;
}

.card:hover {
  z-index: 2;
}

.card legend {
  color: white;
  font-size: 14px;
  text-transform: uppercase;
  margin: 3px 0 0 10px;
}

.card fieldset {
  border-radius: 4px;
  padding: 3px;
  margin: 0 5px;
  height: 265px;
  background: #f7fae3;
  border: 0;
}

.card .img {
  display: block;
  border-radius: 3px;
  background-size: cover;
  background-position: 50% 50%;
}

.card .overlay {
  box-shadow: 0 0 16px rgba(0,0,0,0.6) inset;
  border-radius: 3px;
  position: absolute;
  top: 0;
}

.card .portrait {
  position: relative;
}

.card .portrait .img,
.card .portrait .overlay {
  height: 112px;
}
.card .portrait .overlay {
  width: 100%;
}

.card h1 {
  cursor: inherit;
  margin: 4px 0 2px;
  font-size: 12px;
  font-weight: bold;
  float: left;
}
.card .current {
  margin: 1px;
  position: absolute;
  right: 5px;
}
.card .current p {
  margin: 0;
  font-size: 12px;
  font-weight: bold;
  display: inline-block;
}
.card .current span {
  text-align: center;
  display: inline-block;
  border-radius: 50%;
  width: 20px;
  height: 18px;
  padding: 0;
  padding-top: 4px;
  padding-right: 2px;
}
.card .current .hp span {
  background: #beeb71;
}
.card .current .damage span {
  background: #ed8c8c;
  color: white;
}

.card .desc {
  clear: left;
}

.card div p {
  cursor: inherit;
  text-align: justify;
  margin: 0;
  border: 0;
  font-size: 11px;
  line-height: 13px;
  display: block;
}

.card .description {
  font-style: italic;
  font-size: 10px;
}

.card.player {
  background: #74c47b;
}
.card.enemy {
  /* cursor: url("../img/cursor/cursor-red.png"), url("../img/cursor/cursor-red.cur"), pointer; */
  background: #c23636;
}
.card.skills {
  /* cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer; */
  background: #378cd6;
}
.card.player.heroes.selected,
.card.player.towers.selected {
  box-shadow: 0 0 0 10px springgreen;
  z-index: 5;
}
.card.enemy.heroes.selected,
.card.enemy.towers.selected {
  box-shadow: 0 0 0 10px orangered;
  z-index: 5;
}
.card.skills.selected {
  box-shadow: 0 0 0 6px skyblue;
  z-index: 6;
}
.card.tree.selected {
  box-shadow: 0 0 0 10px palegreen;
}
.card.enemy.attacktarget {
  box-shadow: 0 0 0 10px red;
}
.card.source {
  box-shadow: 0 0 0 10px skyblue;
}
.card.targetarea,
.card.casttarget{
  box-shadow: 0 0 0 10px dodgerblue;
}
.card.player.done {
  background: silver;
}
.map .card.player.done.selected {
  box-shadow: 0 0 0 10px gray;
}
.map .card.enemy.heroes.done,
.map .card.enemy.heroes.done.selected {
  box-shadow: 0 0 0 10px gold;
}

.card .damaged {
  z-index: 16;
  color: gold;
  position: absolute;
  opacity: 0;
  top: 0;
  right: 0;
  font-size: 150px;
  animation: slideup 3s linear;
  text-shadow:
     10px   0   white,
    -10px   0   white,
      0    10px white,
      0   -10px white,
     10px  10px white,
    -10px  10px white,
     10px -10px white,
    -10px -10px white;
}
.card .damaged.critical {
  color: orangered;
  animation: slideupcrit 2s linear;
}
@keyframes slideupcrit {
  0% {top: -180px;opacity: 1;}
  80% {opacity: 1;}
  100% {top: -300px;opacity: 0;}
}
.card .heal {
  z-index: 17;
  color: springgreen;
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
  font-size: 150px;
  animation: slideup 3s linear;
  text-shadow:
     10px   0   white,
    -10px   0   white,
      0    10px white,
      0   -10px white,
     10px  10px white,
    -10px  10px white,
     10px -10px white,
    -10px -10px white;
}
@keyframes slideup {
  0% {top: -120px;opacity: 1;}
  80% {opacity: 1;}
  100% {top: -240px;opacity: 0;}
}
.card.dead {
  background: silver;
  -webkit-filter: grayscale(0.9);
  filter: grayscale(0.9);
}
.card.dead .damaged {
  display: none;
}
.card .buffs {
  position: absolute;
  bottom: 4px;
  left: 9px;
}
.card .buffs .buff {
  display: inline-block;
  margin-right: 3px;
  position: relative;
}
.card .buffs .buff .img ,
.card .buffs .buff .overlay {
  /*box-shadow: 0 0 8px rgba(0,0,0,0.5) inset;*/
  width: 34px;
  height: 34px;
}


.table .deck .card {
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0) scale(0.4);
  margin-right: -190px;
  left: 40px;
}
.table .deck .card:hover {
  transform: translate(-50%, -50%) scale(0.5);
}
.table .deck .card.selected {
  transform: translate(-50%, -50%) scale(0.5);
}
.table .player.skills.sidehand.deck .card {
  margin-right: -140px;
  float: right;
}

.table .player.skills.hand .card {
  margin-right: -140px;
}
/*
.table .player.skills.hand .card:nth-child(1) {
  transform: scale(0.4) rotate(-18deg);
}
.table .player.skills.hand .card:nth-child(2) {
  transform: scale(0.4) rotate(-14deg);
}
.table .player.skills.hand .card:nth-child(3) {
  transform: scale(0.4) rotate(-10deg);
}
.table .player.skills.hand .card:nth-child(4) {
  transform: scale(0.4) rotate(-6deg);
}
.table .player.skills.hand .card:nth-child(5) {
  transform: scale(0.4) rotate(-2deg);
}
.table .player.skills.hand .card:nth-child(6) {
  transform: scale(0.4) rotate(2deg);
}
.table .player.skills.hand .card:nth-child(7) {
  transform: scale(0.4) rotate(6deg);
}
.table .player.skills.hand .card:nth-child(8) {
  transform: translate(-50%, -46%) scale(0.4) rotate(10deg);
}
.table .player.skills.hand .card:nth-child(9) {
  transform: translate(-50%, -42%) scale(0.4) rotate(14deg);
}
.table .player.skills.hand .card:nth-child(10) {
  transform: translate(-50%, -36%) scale(0.4) rotate(18deg);
}
*/
.table .player.skills.sidehand.deck .card.on {
  transform: translate(-50%, -50%) scale(0.45);
}
.table .player.skills.sidehand.deck .card.on:hover,
.table .deck.player.skills.hand .card:hover {
  transform: translate(-50%, -50%) scale(0.5);
  z-index: 8;
}

.selectedarea .selectedcard {
  width: 200px;
  height: 300px;
  transition: all 0.2s;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  transform: rotateY(-180deg);
}
.selectedarea .selectedcard.flip {
  transform: rotateY(0);
}
.selectedarea .selectedcard.flip:hover {
  z-index: 11;
}
.table .selectedarea .card {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 1px);
}
.table .selectedarea .selectedcard.flip .card:hover {
  transform: translate(-87%, -13%) scale(1.75);
}
.table .selectedarea .selectedcard.flip .card:hover .img {
  /* image-rendering: pixelated; */
}
.table .selectedarea .cardback {
  background: #111;
  background-image: url(../img/cardback.jpg);
  background-size: cover;
  background-position: 50%;
  position: absolute;
  padding: 0;
  width: 200px;
  height: 300px;
  border-radius: 8px;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, -1px) rotateY(180deg);
}
.table .selectedarea .card .damaged,
.table .selectedarea .card .heal {
  display: none;
}
.table .deck.skills.enemy .card {
  z-index: 6;
  margin-right: -100px;
}

.map .card {
  position: absolute;
  z-index: 3;
  top: 50%; left: 50%;
  transform: translate3d(-50%, -50%, 2px);
}

.map .card:hover,
.map .card.selected,
.map .card.source {
  transform: translate3d(-50%, -50%, 30px) rotateX(-10deg);
}
.map .card.done.selected {
  transform: translate3d(-50%, -50%, 0) rotateX(0);
}

.card.enemy .current .hp span {
  background: #ed8c8c;
  color: white;
}

/*DRAG*/

.card.dragTargetClone.table {
  transform: scale(0.4);
}

.map .card legend, 
.card.dragTargetClone.fromMap legend {
  opacity: 0;
  height: 12px;
}

.map .card h1,
.map .card .desc,
.map .card .buff,
.card.dragTargetClone.fromMap h1,
.card.dragTargetClone.fromMap .desc,
.card.dragTargetClone.fromMap .buff {
  display: none;
}
.map .card fieldset,
.card.dragTargetClone.fromMap fieldset {
  padding: 0;
}
.map .card .portrait .img,
.map .card .portrait .overlay,
.card.dragTargetClone.fromMap .portrait .img,
.card.dragTargetClone.fromMap .portrait .overlay {
  height: 265px;
}
.map .card .current,
.card.dragTargetClone.fromMap .current {
  top: 35px;
  right: 30px;
}
.map .card .current .damage,
.card.dragTargetClone.fromMap .current .damage {
  display: none;
}
.map .card .current .hp span,
.card.dragTargetClone.fromMap .current .hp span {
  transform: scale(4.5);
  padding-right: 1px;
  width: 21px;
}
/*.map .card:hover .portrait .img {
   background-size: 260%; 
}*/

/*TOWERS*/

.card.player.towers .img {
  background-image: url("../img/towers/tower-player.jpg");
}
.card.enemy.towers .img {
  background-image: url("../img/towers/tower-enemy.jpg");
}

/*UNITS*/

.card.tree {
  background: #5ba22f;
}

.card.tree.rad .img {
  background-image: url("../img/trees/tree.jpg");
}

.card.tree.dire .img {
  background-image: url("../img/trees/tree_dire.jpg");
}
